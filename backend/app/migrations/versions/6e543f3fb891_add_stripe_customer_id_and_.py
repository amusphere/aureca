"""add stripe customer id and subscriptions table

Revision ID: 6e543f3fb891
Revises: 655e04c7f2b0
Create Date: 2025-08-20 16:42:37.923873

"""

from collections.abc import Sequence

import sqlalchemy as sa
import sqlmodel
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "6e543f3fb891"
down_revision: str | None = "655e04c7f2b0"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "subscriptions",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("uuid", sa.Uuid(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("stripe_subscription_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("stripe_customer_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("stripe_price_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("plan_name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("status", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("current_period_start", sa.Float(), nullable=False),
        sa.Column("current_period_end", sa.Float(), nullable=False),
        sa.Column("cancel_at_period_end", sa.Boolean(), nullable=False),
        sa.Column("canceled_at", sa.Float(), nullable=True),
        sa.Column("trial_start", sa.Float(), nullable=True),
        sa.Column("trial_end", sa.Float(), nullable=True),
        sa.Column("created_at", sa.Float(), nullable=False),
        sa.Column("updated_at", sa.Float(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("idx_subscriptions_current_period_end", "subscriptions", ["current_period_end"], unique=False)
    op.create_index("idx_subscriptions_status", "subscriptions", ["status"], unique=False)
    op.create_index(
        "idx_subscriptions_stripe_subscription_id", "subscriptions", ["stripe_subscription_id"], unique=False
    )
    op.create_index("idx_subscriptions_user_id", "subscriptions", ["user_id"], unique=False)
    op.create_index(op.f("ix_subscriptions_status"), "subscriptions", ["status"], unique=False)
    op.create_index(op.f("ix_subscriptions_stripe_customer_id"), "subscriptions", ["stripe_customer_id"], unique=False)
    op.create_index(op.f("ix_subscriptions_stripe_price_id"), "subscriptions", ["stripe_price_id"], unique=False)
    op.create_index(
        op.f("ix_subscriptions_stripe_subscription_id"), "subscriptions", ["stripe_subscription_id"], unique=True
    )
    op.create_index(op.f("ix_subscriptions_user_id"), "subscriptions", ["user_id"], unique=False)
    op.create_index(op.f("ix_subscriptions_uuid"), "subscriptions", ["uuid"], unique=False)
    op.drop_index(
        op.f("idx_chat_messages_user_role_created"),
        table_name="chat_messages",
        postgresql_where="((role)::text = 'user'::text)",
    )
    op.drop_index(op.f("idx_chat_messages_thread_created_desc"), table_name="chat_messages")
    op.create_index("idx_chat_messages_thread_created_desc", "chat_messages", ["thread_id", "created_at"], unique=False)
    op.drop_index(op.f("idx_chat_threads_user_updated_desc"), table_name="chat_threads")
    op.create_index("idx_chat_threads_user_updated_desc", "chat_threads", ["user_id", "updated_at"], unique=False)
    op.add_column("users", sa.Column("stripe_customer_id", sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.create_index(op.f("ix_users_stripe_customer_id"), "users", ["stripe_customer_id"], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_users_stripe_customer_id"), table_name="users")
    op.drop_column("users", "stripe_customer_id")
    op.drop_index("idx_chat_threads_user_updated_desc", table_name="chat_threads")
    op.create_index(
        op.f("idx_chat_threads_user_updated_desc"),
        "chat_threads",
        ["user_id", sa.literal_column("updated_at DESC")],
        unique=False,
    )
    op.drop_index("idx_chat_messages_thread_created_desc", table_name="chat_messages")
    op.create_index(
        op.f("idx_chat_messages_thread_created_desc"),
        "chat_messages",
        ["thread_id", sa.literal_column("created_at DESC")],
        unique=False,
    )
    op.create_index(
        op.f("idx_chat_messages_user_role_created"),
        "chat_messages",
        ["thread_id", "created_at"],
        unique=False,
        postgresql_where="((role)::text = 'user'::text)",
    )
    op.drop_index(op.f("ix_subscriptions_uuid"), table_name="subscriptions")
    op.drop_index(op.f("ix_subscriptions_user_id"), table_name="subscriptions")
    op.drop_index(op.f("ix_subscriptions_stripe_subscription_id"), table_name="subscriptions")
    op.drop_index(op.f("ix_subscriptions_stripe_price_id"), table_name="subscriptions")
    op.drop_index(op.f("ix_subscriptions_stripe_customer_id"), table_name="subscriptions")
    op.drop_index(op.f("ix_subscriptions_status"), table_name="subscriptions")
    op.drop_index("idx_subscriptions_user_id", table_name="subscriptions")
    op.drop_index("idx_subscriptions_stripe_subscription_id", table_name="subscriptions")
    op.drop_index("idx_subscriptions_status", table_name="subscriptions")
    op.drop_index("idx_subscriptions_current_period_end", table_name="subscriptions")
    op.drop_table("subscriptions")
    # ### end Alembic commands ###
