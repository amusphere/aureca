[project]
name = "fastapi-backend"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "alembic>=1.15.2",
    "cryptography>=44.0.0",
    "dotenv>=0.9.9",
    "fastapi[standard]>=0.115.12",
    "google-api-python-client>=2.170.0",
    "google-auth>=2.40.2",
    "google-auth-oauthlib>=1.2.2",
    "httpx>=0.28.1",
    "openai>=1.82.0",
    "passlib[bcrypt]>=1.7.4",
    "psycopg2-binary>=2.9.10",
    "pytest>=8.4.1",
    "pytest-asyncio>=1.1.0",
    "pytest-cov>=6.0.0",
    "pytest-xdist>=3.6.0",
    "psutil>=5.9.0",
    "python-jose>=3.4.0",
    "python-multipart>=0.0.20",
    "mypy>=1.9.0",
    "setuptools>=79.0.0",
    "sqlmodel>=0.0.24",
    "svix>=1.69.0",
    "uvicorn>=0.34.0",
    "ruff>=0.12.7",
    "clerk-backend-api>=3.1.11",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"
addopts = "-v --tb=short --disable-warnings --maxfail=5 -x -n auto"
markers = [
    "unit: 単体テスト",
    "integration: 統合テスト",
    "performance: パフォーマンステスト",
    "slow: 実行時間の長いテスト"
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning"
]

[tool.ruff]
target-version = "py312"
line-length = 120

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long (handled by formatter)
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
    "B024", # Abstract base class has no abstract methods
]

[tool.ruff.lint.isort]
known-third-party = ["fastapi", "pydantic", "starlette"]
